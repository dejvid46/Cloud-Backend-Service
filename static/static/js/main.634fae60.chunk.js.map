{"version":3,"sources":["components/Err404.tsx","features/Fetch.ts","components/Login.tsx","features/Atoms.ts","features/Router.tsx","components/SearchBar.tsx","components/AppBar.tsx","components/FileTree.tsx","components/Drawer.tsx","components/ModalHook.tsx","components/Modal.tsx","components/FolderActions.tsx","components/FolderTable.tsx","components/Folder.tsx","components/Edit.tsx","components/Loading.tsx","components/Text.tsx","components/Image.tsx","components/Audio.tsx","components/Video.tsx","components/UnknownFile.tsx","components/File.tsx","components/StatusSelector.tsx","components/UserCard.tsx","components/AddUser.tsx","components/UserStettings.tsx","routes/bodyRoutes.tsx","components/Body.tsx","components/Main.tsx","routes/mainRoutes.tsx","components/App.tsx","index.tsx"],"names":["Grid","container","spacing","direction","alignItems","justifyContent","style","minHeight","Card","sx","minWidth","CardContent","Typography","variant","component","mb","color","apiFetch","path","method","json","a","contentType","fetch","headers","Headers","getCookie","body","JSON","stringify","apiFetchDownload","fileName","res","status","then","response","blob","url","window","URL","createObjectURL","document","createElement","href","download","appendChild","click","removeChild","text","apiFetchUpload","file","formData","FormData","append","name","parts","cookie","split","length","pop","shift","undefined","setCookie","val","date","Date","value","setTime","getTime","toUTCString","deleteCookie","bufferToBase64","buffer","binary","bytes","Uint8Array","len","byteLength","i","String","fromCharCode","btoa","useState","email","setEmail","pass","setPass","useSnackbar","enqueueSnackbar","isLoged","closeSnackbar","token","location","replace","useEffect","login","Paper","Container","margin","TextField","fullWidth","id","label","type","onChange","e","target","Button","onClick","drawer","atom","key","default","user","folderTree","folderPath","routes","pathname","setUrl","useRecoilState","folderPathState","setFolderPath","onpopstate","fileURL","title","find","Err404","Login","join","route","link","history","pushState","dispatchEvent","Event","Search","styled","theme","position","borderRadius","shape","backgroundColor","alpha","palette","common","white","marginRight","marginLeft","width","breakpoints","up","SearchIconWrapper","padding","height","pointerEvents","display","StyledInputBase","InputBase","paddingLeft","transition","transitions","create","getFolderPath","includes","str","slice","endsWith","useRecoilValue","setText","placeholder","inputProps","onKeyPress","event","pretext","drawerState","setDrawer","React","menu","setMenu","open","Boolean","handleClose","AppBar","flexGrow","zIndex","Toolbar","IconButton","xs","sm","size","edge","Box","fontSize","SearchBar","currentTarget","anchorEl","onClose","MenuListProps","MenuItem","CustomContent","props","ref","classes","className","nodeId","iconProp","icon","expansionIcon","displayIcon","useTreeItem","disabled","expanded","selected","focused","handleExpansion","preventSelection","handleSelection","clsx","root","onMouseDown","iconContainer","CustomTreeItem","TreeItem","ContentComponent","onClickCapture","redirect","folderTreeState","setFolderTree","refreshFolder","console","log","maxWidth","overflowY","TreeView","defaultCollapseIcon","defaultExpandIcon","multiSelect","renderTree","nodes","newId","Array","isArray","folders","map","node","drawerWidth","userState","setUser","refreshMe","Object","keys","MyDrawer","children","Drawer","flexShrink","boxSizing","overflow","List","ListItem","button","ListItemIcon","ListItemText","primary","Divider","FileTree","top","left","transform","bgcolor","boxShadow","p","buttonText","setOpen","rest","Modal","editable","handleOpen","actionsCanUpload","actionsCanDownload","delay","time","Promise","resolve","setTimeout","table","selectionModel","refresh","upload","addFolderOpen","speedDialOnClick","item","openFiles","deleteFiles","filePath","fileUrl","forEach","parseInt","win","focus","_","catch","err","SpeedDial","ariaLabel","bottom","right","FabProps","action","SpeedDialAction","tooltipTitle","rowsCount","setSelectionModel","refresWithSelected","columns","field","headerName","renderCell","params","fileAndPath","getValue","toString","valueGetter","modifiedStr","isNaN","seconds","Number","d","Math","floor","h","m","hDisplay","mDisplay","secondsToDhms","sortable","rowData","api","thisRow","getAllColumns","filter","c","stopPropagation","fileType","rename","renaming","Stack","defaultValue","rows","pageSize","rowsPerPageOptions","checkboxSelection","onSelectionModelChange","newSelectionModel","FolderActions","Div","textAlign","border","Input","setFind","addFolder","setAddFolder","openAddFolder","setOpenAddFolder","files","setFiles","openUpload","setOpenUpload","setTable","getTableData","row","index","modified","refreshFolderTree","refreshTableData","all","addingFolder","uploading","tableHeight","screen","round","FolderTable","flexDirection","marginBottom","align","CircularProgress","ModalHook","htmlFor","multiple","marginTop","setName","editMe","verticalAlign","required","data","setData","fetchText","hljs","highlight","language","dangerouslySetInnerHTML","__html","Loading","fetchImg","arrayBuffer","maxHeight","src","alt","fetchAudio","controls","autoPlay","video","querySelector","play","preload","exist","setExist","newPath","existing","videosTypes","imageTypes","audioTypes","textTypes","concat","arr","some","typ","Text","Audio","Video","Image","UnknownFile","setStatus","FormControl","InputLabel","Select","labelId","getUsers","setSize","setPath","addUser","deleteUser","flex","gutterBottom","noValidate","autoComplete","CardActions","StatusSelector","InputLabelProps","shrink","InputProps","endAdornment","InputAdornment","float","setUsers","editUser","users","me","flexWrap","UserCard","AddUser","Folder","File","UserStettings","Edit","paddingTop","Router","CssBaseline","Body","Main","createTheme","main","secondary","App","ThemeProvider","maxSnack","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.634fae60.chunk.js","sourcesContent":["import Card from '@mui/material/Card';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Typography from '@mui/material/Typography';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nexport default () => {\r\n    return (\r\n        <Grid             \r\n            container\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n            style={{ minHeight: \"100vh\" }}\r\n        >\r\n            <Card sx={{ minWidth: 300 }}>\r\n                <CardContent>\r\n                    <Typography variant=\"h3\" component=\"div\">\r\n                        Error 404\r\n                    </Typography>\r\n                    <Typography sx={{ mb: 1.5 }} color=\"text.secondary\">\r\n                        probably wrong url\r\n                    </Typography>\r\n                </CardContent>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}","\r\nexport const apiFetch = async (path: string, method: string, json?: any) => {\r\n\r\n    const contentType = json ? \"application/json\" : \"application/octet-stream\";\r\n\r\n    return await fetch(\r\n        path,\r\n        {\r\n            method: method,\r\n            headers: new Headers({\r\n                'Content-Type': contentType,\r\n                'token': getCookie(\"token\") || \"\"\r\n            }),\r\n            body: JSON.stringify(json)\r\n        }\r\n    ); \r\n}\r\n\r\nexport const apiFetchDownload = async (path: string, method: string, fileName: string) => {\r\n\r\n    const res = fetch(\r\n        path,\r\n        {\r\n            method: method,\r\n            headers: new Headers({\r\n                'token': getCookie(\"token\") || \"\"\r\n            })\r\n        }\r\n    )\r\n\r\n    if((await res).status < 300){\r\n        res.then(response => response.blob())\r\n        .then(blob => {\r\n            var url = window.URL.createObjectURL(blob);\r\n            var a = document.createElement('a');\r\n            a.href = url;\r\n            a.download = fileName;\r\n            document.body.appendChild(a);\r\n            a.click();\r\n            document.body.removeChild(a);\r\n        });\r\n        return \"file downloaded\";\r\n    }else{ \r\n        return await (await res).text();\r\n    }\r\n}\r\n\r\nexport const apiFetchUpload = async (path: string, method: string, file: File) => {\r\n    var formData = new FormData();\r\n    formData.append(\"file\", file);\r\n\r\n    return await fetch(\r\n        path,\r\n        {\r\n            method: method,\r\n            headers: new Headers({\r\n                'token': getCookie(\"token\") || \"\"\r\n            }),\r\n            body: formData\r\n        }\r\n    )\r\n}\r\n\r\nexport const getCookie = (name: string) => {\r\n    const value = `; ${document.cookie}`;\r\n    const parts = value.split(`; ${name}=`);\r\n    return parts.length === 2 ? (parts.pop() || \"\").split(';').shift(): undefined;\r\n}\r\n\r\nexport const setCookie = (name: string, val: string) => {\r\n    const date = new Date();\r\n    const value = val;\r\n\r\n    date.setTime(date.getTime() + (1 * 24 * 60 * 60 * 1000));\r\n\r\n    document.cookie = name+\"=\"+value+\"; expires=\"+date.toUTCString()+\"; path=/\";\r\n}\r\n\r\nexport const deleteCookie = (name: string) => {\r\n    const date = new Date();\r\n\r\n    // Set it expire in -1 days\r\n    date.setTime(date.getTime() + (-1 * 24 * 60 * 60 * 1000));\r\n\r\n    document.cookie = name+\"=; expires=\"+date.toUTCString()+\"; path=/\";\r\n}\r\n\r\nexport const bufferToBase64 = ( buffer: ArrayBuffer ) => {\r\n    let binary = '';\r\n    let bytes = new Uint8Array( buffer );\r\n    let len = bytes.byteLength;\r\n    for (let i = 0; i < len; i++) {\r\n        binary += String.fromCharCode( bytes[ i ] );\r\n    }\r\n    return window.btoa( binary );\r\n}","import { useState, useEffect } from 'react';\r\nimport Button from '@mui/material/Button';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\nimport TextField from '@mui/material/TextField';\r\nimport Container from '@mui/material/Container';\r\nimport Typography from '@mui/material/Typography';\r\nimport { apiFetch, setCookie, getCookie, deleteCookie } from '../features/Fetch';\r\nimport { useSnackbar } from 'notistack';\r\n\r\n\r\nexport default () => {\r\n\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pass, setPass] = useState(\"\");\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    \r\n\r\n    const isLoged = async () => {\r\n        const res = await apiFetch(\"/check_login\", \"POST\",\r\n            {\r\n                token: getCookie(\"token\") || \"\"\r\n            }\r\n        )\r\n\r\n        if (res.status < 300) {\r\n            window.location.replace(\"showfolder\");\r\n        }else{\r\n            deleteCookie(\"token\");\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        isLoged();\r\n    }, []);\r\n\r\n    const login = async () => {\r\n\r\n        const res = await apiFetch(\"/login\", \"POST\", \r\n            {\r\n                email: email,\r\n                pass: pass\r\n            }\r\n        );\r\n\r\n        if (res.status >= 300) {\r\n            enqueueSnackbar(await res.text(), { variant: \"error\" });\r\n            return;\r\n        }\r\n\r\n        setCookie(\"token\", (await res.json()).token || \"\");\r\n        window.location.replace(\"showfolder\");\r\n\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Grid\r\n                \r\n                container\r\n                spacing={0}\r\n                direction=\"column\"\r\n                alignItems=\"center\"\r\n                justifyContent=\"center\"\r\n                style={{ minHeight: \"100vh\" }}\r\n            >\r\n                <Paper>\r\n                    <Container max-width=\"600px\">\r\n                        <Typography style={{margin: \"20px\"}} variant=\"h4\">Login</Typography>\r\n                        <TextField \r\n                            fullWidth \r\n                            margin=\"normal\" \r\n                            id=\"outlined-basic\" \r\n                            label=\"Email\" \r\n                            type=\"email\" \r\n                            variant=\"outlined\" \r\n                            onChange={e => setEmail(e.target.value)} \r\n                        />\r\n                        <br />\r\n                        <TextField \r\n                            fullWidth \r\n                            margin=\"normal\" \r\n                            id=\"outlined-basic\" \r\n                            label=\"Password\" \r\n                            type=\"password\" \r\n                            variant=\"outlined\" \r\n                            onChange={e => setPass(e.target.value)} \r\n                        />\r\n                        <br />\r\n                        <Button color=\"primary\" style={{margin: \"20px\"}} variant=\"contained\" onClick={login}>Submit</Button>\r\n                    </Container>\r\n                </Paper>\r\n            </Grid>\r\n        </>\r\n    );\r\n}","import { atom } from \"recoil\";\r\nimport { User } from '../components/UserCard';\r\nimport { apiTree } from '../components/FileTree';\r\n\r\nexport const counter = atom({\r\n    key: 'counterState', // unique ID (with respect to other atoms/selectors)\r\n    default: 0, // default value (aka initial value)\r\n});\r\n\r\nexport const drawer = atom({\r\n    key: 'drawerState', // unique ID (with respect to other atoms/selectors)\r\n    default: false, // default value (aka initial value)\r\n});\r\n\r\nexport const user = atom({\r\n    key: 'userState',\r\n    default: {} as User\r\n})\r\n\r\nexport const users = atom({\r\n    key: 'usersState',\r\n    default: [{} as User],\r\n});\r\n\r\nexport const folderTree = atom({\r\n    key: 'folderTreeState',\r\n    default: {} as apiTree,\r\n});\r\n\r\nexport const folderPath = atom({\r\n    key: 'folderPathState',\r\n    default: \"\",\r\n});","import React, { useState } from 'react';\r\nimport Err404 from '../components/Err404';\r\nimport Login from '../components/Login';\r\nimport { useRecoilState } from 'recoil';\r\nimport { folderPath as folderPathState } from '../features/Atoms';\r\nimport { getCookie } from '../features/Fetch';\r\n\r\nexport interface RouterProps {\r\n    routes: Array<Route>\r\n}\r\n\r\nexport interface Route {\r\n    name: string,\r\n    component: React.ReactNode\r\n}\r\n\r\nexport default ({routes}: RouterProps) => {\r\n\r\n    let [url, setUrl] = useState(window.location.pathname);\r\n    const [folderPath, setFolderPath] = useRecoilState(folderPathState);\r\n\r\n    window.onpopstate = () => {\r\n        setFolderPath(fileURL());\r\n        setUrl(window.location.pathname);\r\n    };\r\n\r\n    document.title = fileURL().split(\"/\").pop() || \"yourCloud\";\r\n\r\n    return (\r\n        <>\r\n            {\r\n                getCookie(\"token\")\r\n                ?\r\n                routes.find(({name, component}) => name === \"/\"+url.split(\"/\")[1])?.component || <Err404 />\r\n                :\r\n                <Login />\r\n            }\r\n        </>\r\n    );\r\n}\r\n\r\nexport const fileURL = () => {\r\n    let url = window.location.pathname.split(\"/\");\r\n    url.shift();\r\n    url[0] = \"\";\r\n\r\n    return (url.length !== 0 ? url : [\"\"]).join(\"/\");\r\n}\r\n\r\nexport const route = (link: string) => {\r\n    window.history.pushState({}, \"\", \"/\"+link);\r\n    window.dispatchEvent(new Event(\"popstate\"));\r\n}","import { styled, alpha } from '@mui/material/styles';\r\nimport InputBase from '@mui/material/InputBase';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\n\r\nimport { useState } from 'react';\r\nimport { route } from '../features/Router';\r\nimport { fileURL } from '../features/Router';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { folderPath as folderPathState } from '../features/Atoms';\r\n\r\n\r\nconst Search = styled('div')(({ theme }) => ({\r\n    position: 'relative',\r\n    borderRadius: theme.shape.borderRadius,\r\n    backgroundColor: alpha(theme.palette.common.white, 0.15),\r\n    '&:hover': {\r\n        backgroundColor: alpha(theme.palette.common.white, 0.25),\r\n    },\r\n    marginRight: theme.spacing(2),\r\n    marginLeft: 0,\r\n    width: '100%',\r\n    [theme.breakpoints.up('sm')]: {\r\n        marginLeft: theme.spacing(3),\r\n        width: 'auto',\r\n    },\r\n}));\r\n  \r\nconst SearchIconWrapper = styled('div')(({ theme }) => ({\r\n    padding: theme.spacing(0, 2),\r\n    height: '100%',\r\n    position: 'absolute',\r\n    pointerEvents: 'none',\r\n    display: 'flex',\r\n    alignItems: 'center',\r\n    justifyContent: 'center',\r\n}));\r\n  \r\nconst StyledInputBase = styled(InputBase)(({ theme }) => ({\r\n    color: 'inherit',\r\n    '& .MuiInputBase-input': {\r\n        padding: theme.spacing(1, 1, 1, 0),\r\n        // vertical padding + font size from searchIcon\r\n        paddingLeft: `calc(1em + ${theme.spacing(4)})`,\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: '100%',\r\n        },\r\n    },\r\n}));\r\n\r\nconst getFolderPath = (path: string) => {\r\n    if (path.includes(\".\")){\r\n        const str = path.split(\"/\").slice(0, -1).join(\"/\");\r\n        return `${str.endsWith(\"/\") ? str : str+\"/\"}`;\r\n    }else{\r\n        return `${path.endsWith(\"/\") ? path : path+\"/\"}`;\r\n    }\r\n}\r\n\r\nexport default () => {\r\n\r\n    const path = useRecoilValue(folderPathState) || fileURL();\r\n    const [text, setText] = useState(\"\");\r\n\r\n    const handleKeyDown = (event: any) => {\r\n\r\n        const pretext = text.includes(\".\") ? \"showfile\": \"showfolder\";\r\n\r\n        if (event.key === 'Enter') {\r\n            if (path.includes(\".\")){\r\n                route(`./${pretext}${getFolderPath(path)}${text}`);\r\n            }else{\r\n                setText(\"\");\r\n                route(`./${pretext}${getFolderPath(path)}${text}`);\r\n            }\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Search>\r\n                <SearchIconWrapper>\r\n                    <SearchIcon />\r\n                </SearchIconWrapper>\r\n                <StyledInputBase\r\n                    value={text}\r\n                    onChange={e => setText(e.target.value)} \r\n                    placeholder=\"Search…\"\r\n                    inputProps={{ 'aria-label': 'search' }}\r\n                    onKeyPress={handleKeyDown}\r\n                />\r\n            </Search>\r\n        </>\r\n    )\r\n}","import Toolbar from '@mui/material/Toolbar';\r\nimport Box from '@mui/material/Box';\r\nimport Typography from '@mui/material/Typography';\r\nimport AppBar from '@mui/material/AppBar';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport MenuIcon from '@mui/icons-material/Menu';\r\nimport FilterDramaIcon from '@mui/icons-material/FilterDrama';\r\nimport SearchBar from './SearchBar';\r\nimport AccountCircleIcon from '@mui/icons-material/AccountCircle';\r\nimport { drawer as drawerState } from '../features/Atoms';\r\nimport { useRecoilState } from 'recoil';\r\nimport * as React from 'react';\r\nimport Menu from '@mui/material/Menu';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport { route } from '../features/Router';\r\nimport { deleteCookie } from '../features/Fetch';\r\n\r\nexport default () => {\r\n\r\n    const [drawer, setDrawer] = useRecoilState(drawerState);\r\n\r\n    const [menu, setMenu] = React.useState<null | HTMLElement>(null);\r\n    const open = Boolean(menu);\r\n    const handleClick = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n        setMenu(event.currentTarget);\r\n    };\r\n    const handleClose = () => {\r\n        setMenu(null);\r\n    };\r\n\r\n    const logout = () => {\r\n        deleteCookie(\"token\");\r\n        window.location.href = \"/login\";\r\n    }\r\n\r\n    const editMe = () => {\r\n        route(\"edit\");\r\n        handleClose();\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <AppBar color=\"secondary\" position=\"fixed\" sx={{ flexGrow: 1, zIndex: (theme) => theme.zIndex.drawer + 1 }}>\r\n                <Toolbar>\r\n\r\n                    <IconButton\r\n                        sx={{ display: { xs: 'block', sm: 'none' } }}\r\n                        size=\"large\"\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={() => setDrawer(!drawer)}\r\n                    >\r\n                        <MenuIcon />\r\n                    </IconButton>\r\n                \r\n                    <Typography variant=\"h6\" component=\"div\" style={{margin: \"10px\"}} sx={{ display: { xs: 'none', sm: 'block' } }}>\r\n                        yourCloud\r\n                    </Typography>\r\n                    <Box sx={{ flexGrow: 1 }}>\r\n                        <FilterDramaIcon sx={{ fontSize: \"30px\", display: { xs: 'none', sm: 'block' } }} />\r\n                    </Box>\r\n                    <SearchBar />\r\n                    <IconButton\r\n                        size=\"large\"\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        aria-expanded={open ? 'true' : undefined}\r\n                        onClick={handleClick}\r\n                    >\r\n                        <AccountCircleIcon />\r\n                    </IconButton>\r\n                    <Menu\r\n                        id=\"user-menu\"\r\n                        anchorEl={menu}\r\n                        open={open}\r\n                        onClose={handleClose}\r\n                        MenuListProps={{\r\n                            'aria-labelledby': 'basic-button',\r\n                        }}\r\n                    >\r\n                        <MenuItem onClick={editMe}>Edit me</MenuItem>\r\n                        <MenuItem onClick={logout}>Logout</MenuItem>\r\n                    </Menu>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </>\r\n    )\r\n}","import * as React from 'react';\r\nimport TreeView from '@mui/lab/TreeView';\r\nimport RefreshIcon from '@mui/icons-material/Refresh';\r\nimport Box from '@mui/material/Box';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { useEffect } from \"react\";\r\nimport { useRecoilState } from 'recoil'\r\nimport { folderTree as folderTreeState } from '../features/Atoms';\r\nimport { route } from '../features/Router';\r\nimport { apiFetch } from '../features/Fetch';\r\n\r\nimport ExpandMoreIcon from '@mui/icons-material/ExpandMore';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\nimport TreeItem, {\r\n    TreeItemProps,\r\n    useTreeItem,\r\n    TreeItemContentProps,\r\n} from '@mui/lab/TreeItem';\r\nimport clsx from 'clsx';\r\n\r\nconst CustomContent = React.forwardRef(function CustomContent(\r\n        props: TreeItemContentProps,\r\n        ref,\r\n  ) {\r\n    const {\r\n        classes,\r\n        className,\r\n        label,\r\n        nodeId,\r\n        icon: iconProp,\r\n        expansionIcon,\r\n        displayIcon,\r\n    } = props;\r\n  \r\n    const {\r\n        disabled,\r\n        expanded,\r\n        selected,\r\n        focused,\r\n        handleExpansion,\r\n        handleSelection,\r\n        preventSelection,\r\n    } = useTreeItem(nodeId);\r\n  \r\n    const icon = iconProp || expansionIcon || displayIcon;\r\n  \r\n    const handleMouseDown = (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\r\n        preventSelection(event);\r\n    };\r\n  \r\n    const handleExpansionClick = (\r\n        event: React.MouseEvent<HTMLDivElement, MouseEvent>,\r\n    ) => {\r\n        handleExpansion(event);\r\n    };\r\n  \r\n    return (\r\n      <div\r\n        className={clsx(className, classes.root, {\r\n            [classes.expanded]: expanded,\r\n            [classes.selected]: selected,\r\n            [classes.focused]: focused,\r\n            [classes.disabled]: disabled,\r\n        })}\r\n        onMouseDown={handleMouseDown}\r\n        ref={ref as React.Ref<HTMLDivElement>}\r\n      >\r\n        <div onClick={handleExpansionClick} className={classes.iconContainer}>\r\n            {icon}\r\n        </div>\r\n        <Typography\r\n            component=\"div\"\r\n            className={classes.label}\r\n        >\r\n            {label}\r\n        </Typography>\r\n      </div>\r\n    );\r\n});\r\n\r\nexport interface apiTree {\r\n    name: string;\r\n    folders?: readonly apiTree[];\r\n}\r\n\r\nconst CustomTreeItem = (props: TreeItemProps) => (\r\n    <TreeItem ContentComponent={CustomContent} {...props} onClickCapture={() => redirect(props.nodeId)} />\r\n);\r\n\r\nconst redirect = (nodeId: string) => {\r\n    if(nodeId.includes(\".\")){\r\n        route(\"showfile\"+nodeId);\r\n    }else{\r\n        route(\"showfolder\"+nodeId);\r\n    }\r\n};\r\n\r\nexport default () => {\r\n\r\n    const [folderTree, setFolderTree] = useRecoilState(folderTreeState);\r\n\r\n    useEffect(() => {\r\n        refreshFolder();\r\n    }, []);\r\n\r\n    const refreshFolder = async () => {\r\n        const res = await apiFetch(`/folder_tree`, \"GET\");\r\n\r\n        if (res.status < 300) {\r\n\r\n            setFolderTree(await res.json());\r\n            \r\n        }else{\r\n            console.log(await res.text());\r\n        }\r\n    }\r\n\r\n    const renderTree = (nodes: apiTree, id: string = \"\") => {\r\n\r\n        let newId = id;\r\n\r\n        if(id !== \"/\") {\r\n            newId = newId+\"/\"+nodes.name;\r\n        } else {\r\n            newId = newId+nodes.name;\r\n        }\r\n        return (\r\n            <CustomTreeItem key={newId} nodeId={newId} label={nodes.name}>\r\n            {Array.isArray(nodes.folders)\r\n                ? nodes.folders.map((node) => renderTree(node, newId))\r\n                : null}\r\n            </CustomTreeItem>\r\n        )\r\n    };\r\n\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ flexGrow: 1, maxWidth: 400, overflowY: 'auto' }}>\r\n                <Box sx={{ mb: 1 , margin: \"5px\", marginLeft: \"15px\"}}>\r\n                    <IconButton\r\n                        size=\"large\"\r\n                        edge=\"start\"\r\n                        color=\"inherit\"\r\n                        aria-label=\"menu\"\r\n                        onClick={refreshFolder}\r\n                    >\r\n                        <RefreshIcon />\r\n                    </IconButton>\r\n                </Box>\r\n            </Box>\r\n            <TreeView\r\n                aria-label=\"multi-select\"\r\n                defaultCollapseIcon={<ExpandMoreIcon />}\r\n                defaultExpandIcon={<ChevronRightIcon />}\r\n                multiSelect\r\n                sx={{ flexGrow: 1, maxWidth: 400, overflowY: 'auto' }}\r\n            >\r\n                {renderTree(folderTree)}\r\n            </TreeView>\r\n        </>\r\n    );\r\n}","import Drawer from '@mui/material/Drawer';\r\nimport List from '@mui/material/List';\r\nimport Divider from '@mui/material/Divider';\r\nimport ListItem from '@mui/material/ListItem';\r\nimport ListItemIcon from '@mui/material/ListItemIcon';\r\nimport ListItemText from '@mui/material/ListItemText';\r\nimport PeopleAltIcon from '@mui/icons-material/PeopleAlt';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport Toolbar from '@mui/material/Toolbar';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport { drawer as drawerState, user as userState } from '../features/Atoms';\r\nimport { useRecoilState } from 'recoil';\r\nimport FileTree from './FileTree';\r\nimport { route } from '../features/Router';\r\nimport { useEffect } from 'react';\r\nimport { apiFetch } from '../features/Fetch';\r\n\r\nconst drawerWidth = 240;\r\n\r\ninterface DrawerProps extends React.HTMLProps<HTMLDivElement> {};\r\n\r\nexport default () => {\r\n\r\n    const [drawer, setDrawer] = useRecoilState(drawerState);\r\n\r\n    const [user, setUser] = useRecoilState(userState);\r\n\r\n\r\n    const refreshMe = async () => {\r\n        const res = await apiFetch(\"/user\", \"GET\");\r\n\r\n        if(res.status >= 300) return;\r\n\r\n        setUser(await res.json());\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(Object.keys(user).length === 0) {\r\n            refreshMe();\r\n        }\r\n    }, []);\r\n\r\n    const MyDrawer = ({children}: DrawerProps) => (\r\n        <>\r\n            \r\n            <Drawer\r\n                variant=\"permanent\"\r\n                sx={{\r\n                    display: { xs: 'none', sm: 'block' },\r\n                    width: drawerWidth,\r\n                    flexShrink: 0,\r\n                    [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\r\n                }}\r\n            >\r\n                {children}\r\n            </Drawer>\r\n            <Drawer\r\n                open={drawer}\r\n                onClose={() => setDrawer(!drawer)}\r\n                sx={{\r\n                    width: drawerWidth,\r\n                    display: { xs: 'block', sm: 'none' },\r\n                    flexShrink: 0,\r\n                    [`& .MuiDrawer-paper`]: { width: drawerWidth, boxSizing: 'border-box' },\r\n                }}\r\n            >\r\n                {children}\r\n            </Drawer>\r\n        </>\r\n    );\r\n\r\n    return (\r\n        <>\r\n            <MyDrawer>\r\n                <Toolbar />\r\n                <Box sx={{ overflow: 'auto' }}>\r\n                    <List>\r\n                        {\r\n                            (user.status === 1 || user.status === 2) &&\r\n                                (<ListItem button key=\"user\" onClick={() => route(\"users\")}>\r\n                                    <ListItemIcon>\r\n                                        <PeopleAltIcon />\r\n                                    </ListItemIcon>\r\n                                    <ListItemText primary=\"Users\" />\r\n                                </ListItem>)\r\n                        }\r\n                        <ListItem button key=\"you\" onClick={() => route(\"edit\")}>\r\n                            <ListItemIcon>\r\n                                <PersonIcon />\r\n                            </ListItemIcon>\r\n                            <ListItemText primary={user.name} />\r\n                        </ListItem>\r\n                    </List>\r\n                    <Divider />\r\n                    <FileTree />\r\n                </Box>\r\n            </MyDrawer>\r\n        </>\r\n    )\r\n}","import { useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Modal from '@mui/material/Modal';\r\n\r\ninterface ModalProps extends React.HTMLProps<HTMLDivElement> {\r\n    open: boolean,\r\n    setOpen: React.Dispatch<React.SetStateAction<boolean>>,\r\n    children: React.ReactNode,\r\n    buttonText?: string,\r\n}\r\n\r\nconst style = {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: '40%',\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n  \r\nexport default ({children, buttonText, open, setOpen, ...rest}: ModalProps) => {\r\n    \r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    return (\r\n        <div {...rest} >\r\n\r\n            {\r\n                buttonText ? <Button onClick={handleOpen}>{buttonText}</Button> : <></>\r\n            }\r\n            <Modal\r\n            open={open}\r\n            onClose={handleClose}\r\n            aria-labelledby=\"modal-modal-title\"\r\n            aria-describedby=\"modal-modal-description\"\r\n            >\r\n                <Box sx={style}>\r\n                    {children}\r\n                </Box>\r\n            </Modal>\r\n        </div>\r\n    );\r\n  }","import { useState } from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport Button from '@mui/material/Button';\r\nimport Modal from '@mui/material/Modal';\r\n\r\ninterface ModalProps extends React.HTMLProps<HTMLDivElement> {\r\n    children: React.ReactNode,\r\n    buttonText?: string,\r\n    editable?: boolean,\r\n    styled?: boolean\r\n}\r\n\r\nconst style = {\r\n    position: 'absolute' as 'absolute',\r\n    top: '50%',\r\n    left: '50%',\r\n    transform: 'translate(-50%, -50%)',\r\n    width: 400,\r\n    bgcolor: 'background.paper',\r\n    boxShadow: 24,\r\n    p: 4,\r\n};\r\n  \r\nexport default ({children, buttonText, editable, styled, ...rest}: ModalProps) => {\r\n    const [open, setOpen] = useState(false);\r\n    const handleOpen = () => setOpen(true);\r\n    const handleClose = () => setOpen(false);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                buttonText && styled ? <Button variant=\"outlined\" disabled={editable} onClick={handleOpen}>{buttonText}</Button> : \r\n                buttonText ? <Button disabled={editable} onClick={handleOpen}>{buttonText}</Button> : <></>\r\n            }\r\n            <div {...rest} >\r\n                <Modal\r\n                open={open}\r\n                onClose={handleClose}\r\n                aria-labelledby=\"modal-modal-title\"\r\n                aria-describedby=\"modal-modal-description\"\r\n                >\r\n                    <Box sx={style}>\r\n                        {children}\r\n                    </Box>\r\n                </Modal>\r\n            </div>\r\n        </>\r\n    );\r\n  }","import SpeedDial from '@mui/material/SpeedDial';\r\nimport MoreVertIcon from '@mui/icons-material/MoreVert';\r\nimport SpeedDialAction from '@mui/material/SpeedDialAction';\r\nimport LaunchIcon from '@mui/icons-material/Launch';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\nimport DownloadIcon from '@mui/icons-material/Download';\r\nimport FileUploadIcon from '@mui/icons-material/FileUpload';\r\nimport CreateNewFolderIcon from '@mui/icons-material/CreateNewFolder';\r\nimport DriveFileRenameOutlineIcon from '@mui/icons-material/DriveFileRenameOutline';\r\nimport { GridSelectionModel } from '@mui/x-data-grid';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport { tableData } from './FolderTable';\r\nimport { fileURL } from '../features/Router';\r\nimport { apiFetch, apiFetchDownload } from '../features/Fetch';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { folderPath as folderPathState, user as userState } from '../features/Atoms';\r\n\r\nconst actionsCanUpload = [\r\n    { icon: <LaunchIcon />, name: 'Open' },\r\n    { icon: <DeleteIcon />, name: 'Delete' },\r\n    { icon: <DownloadIcon />, name: 'Download' },\r\n    { icon: <FileUploadIcon />, name: 'Upload' },\r\n    { icon: <CreateNewFolderIcon />, name: 'Add Folder' }\r\n];\r\n\r\nconst actionsCanDownload = [\r\n    { icon: <LaunchIcon />, name: 'Open' },\r\n    { icon: <DownloadIcon />, name: 'Download' }\r\n];\r\n\r\ninterface ActionsProps {\r\n    table: tableData[],\r\n    selectionModel: GridSelectionModel,\r\n    refresh: () => Promise<void>,\r\n    upload: () => void\r\n    addFolderOpen: () => void\r\n}\r\n\r\nfunction delay(time: number) {\r\n    return new Promise(resolve => setTimeout(resolve, time));\r\n}\r\n\r\nexport default ({table, selectionModel, refresh, upload, addFolderOpen}: ActionsProps) => {\r\n\r\n    const folderPath = useRecoilValue(folderPathState) || fileURL();\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n    const user = useRecoilValue(userState);\r\n\r\n    const speedDialOnClick = (item: string) => {\r\n        switch (item) {\r\n            case \"Open\":\r\n                openFiles();\r\n                break;\r\n            case \"Delete\":\r\n                deleteFiles();\r\n                break;\r\n            case \"Download\":\r\n                download();\r\n                break;\r\n            case \"Upload\":\r\n                upload();\r\n                break;\r\n            case \"Add Folder\":\r\n                addFolderOpen();\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    const filePath = (id: number) => {\r\n        let fileUrl = folderPath;\r\n        fileUrl = fileUrl === \"/\" ? \"\" : fileUrl;\r\n\r\n        return `${fileUrl}/${table[id].name}`;\r\n    }\r\n\r\n    const openFiles = () => {\r\n        selectionModel.forEach((id: string | number) => {\r\n\r\n            if(typeof id === \"string\") id = parseInt(id);\r\n\r\n            const fileType = table[id].name.split(\".\")[1] || \"folder\";\r\n\r\n            if(fileType === \"folder\"){\r\n                const win = window.open(`/showfolder${filePath(id)}`);\r\n                win?.focus();\r\n            }else{\r\n                const win = window.open(`/showfile${filePath(id)}`);\r\n                win?.focus();\r\n            }\r\n        })\r\n    }\r\n\r\n    const deleteFiles = async () => {\r\n        selectionModel.forEach(async (id: string | number) => {\r\n\r\n            if(typeof id === \"string\") id = parseInt(id);\r\n\r\n            const fileType = table[id].name.split(\".\")[1] || \"folder\";\r\n\r\n            let res;\r\n\r\n            if(fileType === \"folder\"){\r\n                res = await apiFetch(`/folder${filePath(id)}`, \"DELETE\")\r\n            }else{\r\n                res = await apiFetch(`/file${filePath(id)}`, \"DELETE\")\r\n            }\r\n\r\n            if (res.status < 300) {\r\n                enqueueSnackbar(await res.text(), { variant: \"success\" });\r\n            }else{\r\n                enqueueSnackbar(await res.text(), { variant: \"error\" });\r\n            }\r\n        });\r\n\r\n        delay(500).then(() => {\r\n            refresh();\r\n        })\r\n    }\r\n\r\n    const download = () => {\r\n        selectionModel.forEach(async (id: string | number) => {\r\n\r\n            if(typeof id === \"string\") id = parseInt(id);\r\n\r\n            const fileType = table[id].name.split(\".\")[1] || \"folder\";\r\n\r\n            if(fileType !== \"folder\"){\r\n                apiFetchDownload(`/file${filePath(id)}`, \"GET\", table[id].name)\r\n                    .then(_ => _)\r\n                    .catch(err => enqueueSnackbar(err.text(), { variant: \"error\" }));\r\n            }\r\n\r\n        })\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SpeedDial\r\n                ariaLabel=\"SpeedDial basic example\"\r\n                sx={{ position: 'fixed', bottom: 16, right: 16 }}\r\n                direction=\"left\"\r\n                icon={<MoreVertIcon />}\r\n                FabProps={{\r\n                    sx: {\r\n                        bgcolor: 'primary.main',\r\n                        '&:hover': {\r\n                            bgcolor: 'primary.main',\r\n                        }\r\n                    }\r\n                }}\r\n            >\r\n                {\r\n                user.status <= 3 ?\r\n                    actionsCanUpload.map((action) => (\r\n                        <SpeedDialAction\r\n                            key={action.name}\r\n                            data-index={action.name}\r\n                            icon={action.icon}\r\n                            tooltipTitle={action.name}\r\n                            onClick={() => speedDialOnClick(action.name)}\r\n                        />\r\n                    ))\r\n                :\r\n                    actionsCanDownload.map((action) => (\r\n                        <SpeedDialAction\r\n                            key={action.name}\r\n                            data-index={action.name}\r\n                            icon={action.icon}\r\n                            tooltipTitle={action.name}\r\n                            onClick={() => speedDialOnClick(action.name)}\r\n                        />\r\n                    ))\r\n                }\r\n            </SpeedDial>\r\n        </>\r\n    );\r\n}","import { DataGrid, GridColDef, GridValueGetterParams, GridApi, GridCellValue } from '@mui/x-data-grid';\r\nimport Button from '@mui/material/Button';\r\nimport Stack from '@mui/material/Stack';\r\nimport FolderOpenIcon from '@mui/icons-material/FolderOpen';\r\nimport PhotoIcon from '@mui/icons-material/Photo';\r\nimport TextSnippetIcon from '@mui/icons-material/TextSnippet';\r\nimport MusicVideoIcon from '@mui/icons-material/MusicVideo';\r\nimport VideocamIcon from '@mui/icons-material/Videocam';\r\nimport InsertDriveFileIcon from '@mui/icons-material/InsertDriveFile';\r\nimport Grid from '@mui/material/Grid';\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nimport { apiFetch } from '../features/Fetch';\r\nimport { apiFetchDownload } from '../features/Fetch';\r\nimport Modal from './Modal';\r\nimport FolderActions from './FolderActions';\r\nimport { useState } from 'react';\r\nimport { route, fileURL } from '../features/Router';\r\nimport { GridSelectionModel } from '@mui/x-data-grid';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nfunction secondsToDhms(seconds: number) {\r\n    seconds = Number(seconds);\r\n    var d = Math.floor(seconds / (3600*24));\r\n    var h = Math.floor(seconds % (3600*24) / 3600);\r\n    var m = Math.floor(seconds % 3600 / 60);\r\n\r\n    var dDisplay = d > 0 ? d  + \"d \" : \"\";\r\n    var hDisplay = h > 0 ? h + \"h \" : \"\";\r\n    var mDisplay = m > 0 ? m + \"m \" : \"\";\r\n\r\n    if (d < 1) {\r\n        return mDisplay + hDisplay;\r\n    }else if(h < 1){\r\n        return mDisplay;\r\n    }else{\r\n        return dDisplay + hDisplay;\r\n    }\r\n}\r\n\r\nexport interface tableData {\r\n    id: number,\r\n    name: string,\r\n    modified: string,\r\n    size: number\r\n}\r\n\r\ninterface TableProps {\r\n    table: tableData[],\r\n    rowsCount: number,\r\n    refresh: () => Promise<void>,\r\n    upload: () => void,\r\n    addFolderOpen: () => void\r\n}\r\n\r\nexport default ({ table, rowsCount, refresh, upload, addFolderOpen}: TableProps) => {\r\n\r\n    const [selectionModel, setSelectionModel] = useState<GridSelectionModel>([]);\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const refresWithSelected = async () => {\r\n        setSelectionModel([]);\r\n        await refresh();\r\n    }\r\n\r\n    const columns: GridColDef[] = [\r\n        { \r\n            field: 'img', \r\n            headerName: '', \r\n            width: 40,\r\n            renderCell: (params) => {\r\n    \r\n                const fileAndPath = (params.getValue(params.id, 'name') || \"folder\").toString().split(\".\");\r\n    \r\n                const type = fileAndPath.length === 1 ? \"folder\" : fileAndPath[fileAndPath.length - 1];\r\n          \r\n                return (\r\n                    <>\r\n                        {\r\n                            (\r\n                                (type === \"folder\" && (<FolderOpenIcon />)) ||\r\n\r\n                                (type === \"jpg\" && (<PhotoIcon />)) ||\r\n                                (type === \"png\" && (<PhotoIcon />)) ||\r\n                                (type === \"jpeg\" && (<PhotoIcon />)) ||\r\n                                (type === \"apng\" && (<PhotoIcon />)) ||\r\n                                (type === \"bmp\" && (<PhotoIcon />)) ||\r\n                                (type === \"JPG\" && (<PhotoIcon />)) ||\r\n                                (type === \"PNG\" && (<PhotoIcon />)) ||\r\n\r\n                                (type === \"mp3\" && (<MusicVideoIcon />)) ||\r\n                                (type === \"ogg\" && (<MusicVideoIcon />)) ||\r\n                                (type === \"wav\" && (<MusicVideoIcon />)) ||\r\n\r\n                                (type === \"txt\" && (<TextSnippetIcon />)) ||\r\n                                (type === \"docx\" && (<TextSnippetIcon />)) ||\r\n                                (type === \"js\" && (<TextSnippetIcon />)) ||\r\n                                (type === \"rs\" && (<TextSnippetIcon />)) ||\r\n                                (type === \"php\" && (<TextSnippetIcon />)) ||\r\n                                (type === \"ts\" && (<TextSnippetIcon />)) ||\r\n\r\n                                (type === \"mp4\" && (<VideocamIcon />)) ||\r\n                                (type === \"webm\" && (<VideocamIcon />)) ||\r\n                                (type === \"ogg\" && (<VideocamIcon />)) ||\r\n\r\n                                ((<InsertDriveFileIcon />))\r\n                            )\r\n                        }\r\n                    </>\r\n                );\r\n            }\r\n        },\r\n        { \r\n            field: 'name', \r\n            headerName: 'Name', \r\n            type: 'string', \r\n            minWidth: 150\r\n        },\r\n        { \r\n            field: 'modifiedDate', \r\n            headerName: 'Modified', \r\n            type: 'string',\r\n            minWidth: 100,\r\n            valueGetter: (params: GridValueGetterParams) => {\r\n                const modifiedStr = (params.getValue(params.id, 'modified') || \"\").toString();\r\n    \r\n                const time = parseInt(modifiedStr);\r\n    \r\n                if (isNaN(time)) return modifiedStr;\r\n    \r\n                return secondsToDhms(time);\r\n            }\r\n        },\r\n        {\r\n            field: 'type',\r\n            headerName: 'Type',\r\n            type: 'string',\r\n            valueGetter: (params: GridValueGetterParams) => {\r\n                const fileAndPath = (params.getValue(params.id, 'name') || \"folder\").toString().split(\".\");\r\n    \r\n                return fileAndPath.length === 1 ? \"folder\" : fileAndPath[fileAndPath.length - 1];\r\n            }\r\n        },\r\n        {\r\n            field: 'size',\r\n            headerName: 'Size',\r\n            type: 'number',\r\n        },\r\n        {\r\n            field: 'buttons',\r\n            headerName: '',\r\n            width: 340,\r\n            sortable: false,\r\n            renderCell: (params) => {\r\n    \r\n                const rowData = () => {\r\n                    const api: GridApi = params.api;\r\n                    const thisRow: Record<string, GridCellValue> = {};\r\n            \r\n                    api\r\n                        .getAllColumns()\r\n                        .filter((c) => c.field !== \"__check__\" && !!c)\r\n                        .forEach(\r\n                        (c) => (thisRow[c.field] = params.getValue(params.id, c.field))\r\n                    );\r\n    \r\n                    return thisRow;\r\n                }\r\n    \r\n                const open = (e: any) => {\r\n                    e.stopPropagation(); // don't select this row after clicking\r\n                    \r\n                    const fileType = (params.getValue(params.id, 'name') || \"folder\").toString().split(\".\")[1] || \"folder\";\r\n    \r\n                    let fileUrl = fileURL();\r\n    \r\n                    fileUrl = fileUrl === \"/\" ? \"\" : fileUrl;\r\n    \r\n                    if(fileType === \"folder\"){\r\n                        route(`showfolder${fileUrl}/${rowData().name}`)\r\n                    }else{\r\n                        route(`showfile${fileUrl}/${rowData().name}`)\r\n                    }\r\n                };\r\n    \r\n                const download = async (e: any) => {\r\n                    e.stopPropagation(); // don't select this row after clicking\r\n        \r\n                    const fileType = (rowData().name+\"\").split(\".\")[1] || \"folder\";\r\n    \r\n                    let fileUrl = fileURL();\r\n    \r\n                    fileUrl = fileUrl === \"/\" ? \"\" : fileUrl;\r\n        \r\n                    if(fileType !== \"folder\"){\r\n                        apiFetchDownload(`/file${fileUrl}/${rowData().name}`, \"GET\", rowData().name+\"\");\r\n                    }\r\n                };\r\n    \r\n                let rename = rowData().name;\r\n    \r\n                const renaming = async () => {\r\n    \r\n                    let fileUrl = fileURL();\r\n    \r\n                    fileUrl = fileUrl === \"/\" ? \"\" : fileUrl;\r\n    \r\n                    const res = await apiFetch(`/file${fileUrl}/${rowData().name}`, \"PATCH\", \r\n                        {\r\n                            name: `${fileUrl}/${rename}`\r\n                        }\r\n                    );\r\n    \r\n                    if (res.status < 300) {\r\n                        enqueueSnackbar( await res.text(), { variant: \"success\" });\r\n                    }else{\r\n                        enqueueSnackbar( await res.text(), { variant: \"error\" });\r\n                    }\r\n                    await refresh();\r\n                }\r\n          \r\n                return (\r\n                    <Stack spacing={2} direction=\"row\">\r\n                        <Button onClick={open} variant=\"outlined\">Open</Button>\r\n                        <Button onClick={download} variant=\"outlined\">Download</Button>\r\n                        <Modal styled={true} buttonText=\"Rename\">\r\n                            <Grid>\r\n                                <Grid item xs={3} sx={{ margin: \"auto\", minWidth: \"300px\" }}>\r\n                                    <TextField \r\n                                        sx={{ minWidth: \"300px\" }}\r\n                                        id=\"outlined-basic\" \r\n                                        label=\"Rename\" \r\n                                        defaultValue={rowData().name}\r\n                                        variant=\"outlined\" \r\n                                        onChange={(e) => rename = e.target.value}\r\n                                    />\r\n                                    <Button onClick={renaming} sx={{ margin: \"30px\" }} variant=\"contained\" component=\"span\">\r\n                                        Submit\r\n                                    </Button>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </Modal>\r\n                    </Stack>\r\n                );\r\n            }\r\n        }\r\n    ];\r\n\r\n    return (\r\n        <>\r\n            <DataGrid\r\n                rows={table}\r\n                columns={columns}\r\n                pageSize={rowsCount}\r\n                rowsPerPageOptions={[rowsCount]}\r\n                checkboxSelection\r\n\r\n                onSelectionModelChange={(newSelectionModel) => {\r\n                    setSelectionModel(newSelectionModel);\r\n                }}\r\n                selectionModel={selectionModel}\r\n            />\r\n            <FolderActions \r\n                addFolderOpen={addFolderOpen}\r\n                refresh={refresWithSelected}\r\n                upload={upload}\r\n                table={table}\r\n                selectionModel= {selectionModel}\r\n            />\r\n        </>\r\n    );\r\n}","import { useState, useEffect } from \"react\";\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from \"@mui/material/TextField\";\r\n\r\nimport { styled } from '@mui/material/styles';\r\n\r\nimport ModalHook from './ModalHook';\r\nimport FolderTable from './FolderTable';\r\nimport { tableData } from './FolderTable';\r\nimport { fileURL } from '../features/Router';\r\nimport { apiFetch, apiFetchUpload } from '../features/Fetch';\r\nimport { useRecoilValue, useRecoilState } from 'recoil';\r\nimport { folderPath as folderPathState, folderTree as folderTreeState, user as userState } from '../features/Atoms';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nconst Div = styled('div')({\r\n    textAlign: \"center\",\r\n    padding: \"20px\",\r\n    border: \"3px dashed #eeeeee\",\r\n    backgroundColor: \"#fafafa\",\r\n    color: \"#bdbdbd\"\r\n});\r\n\r\nconst Input = styled('input')({\r\n    display: \"none\"\r\n});\r\n\r\nexport default () => {\r\n\r\n    const [user, setUser] = useRecoilState(userState);\r\n\r\n\r\n    const refreshMe = async () => {\r\n        const res = await apiFetch(\"/user\", \"GET\");\r\n\r\n        if(res.status >= 300) return;\r\n\r\n        setUser(await res.json());\r\n\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(Object.keys(user).length === 0) {\r\n            refreshMe();\r\n        }\r\n    }, []);\r\n\r\n    const folderPath = useRecoilValue(folderPathState) || fileURL();\r\n\r\n    const [find, setFind] = useState(true);\r\n\r\n    const [rename, setRename] = useState<string>(folderPath.split(\"/\").pop() || \"\");\r\n    const [openFolderRename, setOpenFolderRename] = useState(false);\r\n\r\n    const [addFolder, setAddFolder] = useState<string>(\"\");\r\n    const [openAddFolder, setOpenAddFolder] = useState(false);\r\n\r\n    const [files, setFiles] = useState<FileList | undefined>();\r\n    const [folderTree, setFolderTree] = useRecoilState(folderTreeState);\r\n    const [openUpload, setOpenUpload] = useState(false);\r\n\r\n    const [table, setTable] = useState<tableData[] | undefined>();\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        if(fileURL() === folderPath){\r\n            getTableData()\r\n        }\r\n    }, [folderPath]);\r\n\r\n    const getTableData = async () => {\r\n\r\n        const res = await apiFetch(`/folder${folderPath === \"\" ? \"/\" : folderPath}`, \"GET\");\r\n\r\n        if (res.status < 300) {\r\n\r\n            const json = await res.json();\r\n            setTable(json.map((row: any, index: number) => {\r\n                return {\r\n                    id: index,\r\n                    name: row.name,\r\n                    modified: row.date,\r\n                    size: row.size\r\n                } as tableData;\r\n            }))\r\n            setFind(true);\r\n        }else{\r\n            setFind(false);\r\n            setTable([]);\r\n            console.log(await res.text());\r\n        }\r\n    }\r\n\r\n    const refreshFolderTree = async () => {\r\n        const res = await apiFetch(`/folder_tree`, \"GET\");\r\n        if (res.status < 300) {\r\n            setFolderTree(await res.json());\r\n            \r\n        }else{\r\n            console.log(await res.text());\r\n        }\r\n    }\r\n\r\n    const refreshTableData = async () => {\r\n\r\n        const res = await apiFetch(`/folder${folderPath === \"\" ? \"/\" : folderPath}`, \"GET\");\r\n\r\n        if (res.status < 300) {\r\n\r\n            const json = await res.json();\r\n            setTable(json.map((row: any, index: number) => {\r\n                return {\r\n                    id: index,\r\n                    name: row.name,\r\n                    modified: row.date,\r\n                    size: row.size\r\n                } as tableData;\r\n            }))\r\n        }else{\r\n            console.log(await res.text());\r\n        }\r\n    }\r\n\r\n    const refresh = async () => {\r\n        await Promise.all([\r\n            refreshTableData(),\r\n            refreshFolderTree()\r\n        ])\r\n    }\r\n\r\n    const addFolderOpen = () => {\r\n        setOpenAddFolder(true);\r\n    }\r\n\r\n    const addingFolder = async () => {\r\n        const res = await apiFetch(`/folder${folderPath === \"\" ? \"/\" : folderPath}/${addFolder}`, \"POST\");\r\n\r\n        if (res.status < 300) {\r\n            enqueueSnackbar( await res.text(), { variant: \"success\" });\r\n        }else{\r\n            enqueueSnackbar( await res.text(), { variant: \"error\" });\r\n        }\r\n        await refresh();\r\n        setOpenAddFolder(false);\r\n    }\r\n\r\n    const upload = () => {\r\n        setOpenUpload(true);\r\n    }\r\n\r\n    const uploading = async () => {\r\n        if(files !== undefined){\r\n            for (let i = 0; i < files.length; i++) {\r\n\r\n                let res = await apiFetchUpload(`/file/${folderPath}`, \"POST\", files[i]);\r\n\r\n                if (res.status < 300) {\r\n                    enqueueSnackbar( await res.text(), { variant: \"success\" });\r\n                }else{\r\n                    enqueueSnackbar( await res.text(), { variant: \"error\" });\r\n                }\r\n            };\r\n        }\r\n        refresh();\r\n        setOpenUpload(false);\r\n    }\r\n\r\n    const tableHeight = window.screen.height * 0.60;\r\n\r\n    const rowsCount = Math.round(tableHeight / 51);\r\n\r\n    return (\r\n        <>\r\n            <div id=\"tableDiv\" style={{ height: `${tableHeight}px`, width: '100%' }}>\r\n                {\r\n                    table !== undefined ? \r\n                        table && table.length !== 0 ? \r\n                            <FolderTable \r\n                                addFolderOpen={addFolderOpen}\r\n                                upload={upload} \r\n                                refresh={refresh} \r\n                                table={table} \r\n                                rowsCount={rowsCount} \r\n                            /> \r\n                        : find ?\r\n                            <>\r\n                                <Grid\r\n                                    container\r\n                                    spacing={0}\r\n                                    direction=\"column\"\r\n                                    alignItems=\"center\"\r\n                                    justifyContent=\"center\"\r\n                                    style={{ minHeight: '70vh' }}\r\n                                >\r\n                                    <Box sx={{display: \"flex\", flexDirection: \"column\", textAlign: \"center\" }}>\r\n                                        <Typography variant=\"h6\" component=\"div\" style={{marginBottom: \"5vh\"}} >\r\n                                            Folder is empty\r\n                                        </Typography>\r\n                                        {user.status <= 3 ?\r\n                                            <>\r\n                                                <Button sx={{ margin: \"5px\" }} onClick={upload} variant=\"contained\">Upload files</Button>\r\n                                                <Button sx={{ margin: \"5px\" }} onClick={addFolderOpen} variant=\"contained\">Add Folder</Button>\r\n                                            </>\r\n                                        :\r\n                                            <></>\r\n                                        }\r\n                                    </Box>\r\n                                </Grid>\r\n                            </>\r\n                        :\r\n                        <>\r\n                            <Grid\r\n                                container\r\n                                spacing={0}\r\n                                direction=\"column\"\r\n                                alignItems=\"center\"\r\n                                justifyContent=\"center\"\r\n                                style={{ minHeight: '70vh' }}\r\n                            >\r\n                                <Grid item xs={3}>\r\n                                    <Typography variant=\"h6\" align=\"center\" component=\"div\" style={{marginBottom: \"2vh\"}} >\r\n                                        Error 404\r\n                                    </Typography>\r\n                                    <Typography variant=\"overline\" component=\"div\" >\r\n                                        cant find folder\r\n                                    </Typography>\r\n                                </Grid>\r\n                            </Grid>\r\n                        </>\r\n                    :\r\n                    <Grid             \r\n                        container\r\n                        spacing={0}\r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"center\"\r\n                        style={{ minHeight: \"100vh\" }}\r\n                    >\r\n                        <CircularProgress />\r\n                    </Grid>\r\n                }\r\n            </div>\r\n            <ModalHook open={openUpload} setOpen={setOpenUpload}>\r\n\r\n                <label htmlFor=\"file-upload\">\r\n                    <Div>\r\n                        <Input id=\"file-upload\" onChange={e => {\r\n                            if(e.target.files && e.target.files.length === 0) {\r\n                                setFiles(undefined)\r\n                                return;\r\n                            }\r\n                            setFiles(e.target.files || undefined)\r\n                        }} multiple type=\"file\" />\r\n                        {files ? \r\n                            files.length > 1 ?\r\n                                `count of files: ${files.length}`    \r\n                            :\r\n                                files[0].name\r\n                        : \r\n                            \"Upload files\"\r\n                        }\r\n                    </Div>\r\n                </label>\r\n\r\n                {\r\n                    files ? \r\n                        <Box sx={{ marginTop: \"20px\", textAlign: 'center'}}>\r\n                            <Button variant=\"contained\" onClick={uploading} component=\"span\">\r\n                                Upload\r\n                            </Button>\r\n                        </Box>\r\n                    :\r\n                        <></>\r\n                }\r\n            </ModalHook>\r\n            <ModalHook open={openAddFolder} setOpen={setOpenAddFolder}>\r\n                <Grid>\r\n                    <Grid item xs={3} sx={{ margin: \"auto\", minWidth: \"300px\" }}>\r\n                        <TextField\r\n                            onChange={e => setAddFolder(e.target.value)} \r\n                            sx={{ minWidth: \"300px\" }}\r\n                            id=\"outlined-basic\" \r\n                            label=\"Add Folder\" \r\n                            defaultValue={addFolder}\r\n                            variant=\"outlined\" \r\n                        />\r\n                        <Button onClick={addingFolder} sx={{ margin: \"30px\" }} variant=\"contained\" component=\"span\">\r\n                            Submit\r\n                        </Button>\r\n                    </Grid>\r\n                </Grid>\r\n            </ModalHook>\r\n        </>\r\n    );\r\n}","import Button from '@mui/material/Button';\r\nimport TextField from '@mui/material/TextField';\r\nimport Box from '@mui/material/Box';\r\n\r\nimport { user as userState, folderPath as folderPathState } from '../features/Atoms';\r\nimport { useRecoilState, useRecoilValue } from 'recoil';\r\nimport { useState, useEffect } from 'react';\r\nimport { apiFetch } from '../features/Fetch';\r\nimport { useSnackbar } from 'notistack';\r\nimport { fileURL } from '../features/Router';\r\n\r\nexport default () => {\r\n\r\n    const [user, setUser] = useRecoilState(userState);\r\n    const path = useRecoilValue(folderPathState) || fileURL();\r\n\r\n    const [name, setName] = useState(user.name);\r\n    const [email, setEmail] = useState(user.email);\r\n    const [pass, setPass] = useState(user.pass);\r\n\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const editMe = async () => {\r\n        const res = await apiFetch(\"/user\", \"PATCH\", \r\n            {\r\n                name: name,\r\n                email: email,\r\n                pass: pass\r\n            }\r\n        )\r\n\r\n        if (res.status < 300) {\r\n            enqueueSnackbar(await res.text(), { variant: \"success\" });\r\n            refreshMe();\r\n        }else{\r\n            enqueueSnackbar(await res.text(), { variant: \"error\" });\r\n        }\r\n    }\r\n\r\n    const refreshMe = async () => {\r\n        const res = await apiFetch(\"/user\", \"GET\");\r\n\r\n        if(res.status >= 300) return;\r\n\r\n        setUser(await res.json());\r\n\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(Object.keys(user).length === 0) {\r\n            refreshMe();\r\n        }\r\n    }, [path]);\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{\r\n                maxWidth: \"400px\",\r\n                margin: \"0 auto\",\r\n                verticalAlign: \"middle\"\r\n            }}>\r\n                        <Box>\r\n                            <TextField \r\n                                sx={{ margin: \"10px\" }}\r\n                                required \r\n                                defaultValue={user.name} \r\n                                id=\"name\" \r\n                                label=\"Name\" \r\n                                variant=\"standard\" \r\n                                size=\"medium\"\r\n                                onChange={e => setName(e.target.value)} \r\n                            />\r\n                            <TextField \r\n                                sx={{ margin: \"10px\" }}\r\n                                required \r\n                                defaultValue={user.email} \r\n                                id=\"email\" \r\n                                label=\"Email\" \r\n                                variant=\"standard\"\r\n                                size=\"medium\" \r\n                                onChange={e => setEmail(e.target.value)} \r\n                            />\r\n                            <TextField \r\n                                sx={{ margin: \"10px\" }}\r\n                                required \r\n                                defaultValue={user.pass} \r\n                                id=\"pass\" \r\n                                label=\"Password\" \r\n                                variant=\"standard\"\r\n                                size=\"medium\" \r\n                                onChange={e => setPass(e.target.value)} \r\n                            />\r\n                        </Box>\r\n                <Button color=\"primary\" sx={{ marginTop: \"20px\" }} variant=\"contained\" onClick={editMe}>Submit</Button>\r\n            </Box>\r\n        </>\r\n    )\r\n}","import Grid from '@mui/material/Grid';\r\nimport CircularProgress from '@mui/material/CircularProgress';\r\n\r\nexport default () => {\r\n    return (\r\n        <Grid\r\n            container\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n        >\r\n            <CircularProgress/>\r\n        </Grid>\r\n    )\r\n}","import Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport Loading from './Loading';\r\nimport hljs from 'highlight.js';\r\nimport { useState, useEffect } from 'react';\r\nimport { apiFetch } from '../features/Fetch';\r\n\r\nimport \"highlight.js/styles/agate.css\";\r\n\r\ninterface TextProps {\r\n    path: String\r\n}\r\n\r\nexport default ({ path }: TextProps) => {\r\n\r\n    let [data, setData] = useState<string | undefined>();\r\n\r\n    const fetchText = async () => {\r\n        (await \r\n            apiFetch(`/file${path}`, \"GET\")\r\n        ).text()\r\n        .then((text) => {\r\n            setData(hljs.highlight(text, {language: path.split(\".\").pop() || \"\"}).value);\r\n        });\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchText();\r\n    }, [path]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                data ?\r\n                    <Grid\r\n                        container\r\n                        spacing={0}\r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"center\"\r\n                    >\r\n                        <Paper>\r\n                            <Box sx={{ margin: \"20px\"}}>\r\n                                <pre>\r\n                                    <code className='hljs' dangerouslySetInnerHTML={{ __html: data}} />\r\n                                </pre>\r\n                            </Box>\r\n                        </Paper>\r\n                    </Grid>\r\n                :\r\n                    <Loading />\r\n            }   \r\n        </>\r\n    )\r\n}","import Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport { bufferToBase64 } from '../features/Fetch';\r\nimport Loading from './Loading';\r\nimport { useState, useEffect } from 'react';\r\nimport { apiFetch } from '../features/Fetch';\r\n\r\ninterface TextProps {\r\n    path: string\r\n}\r\n\r\nexport default ({ path }: TextProps) => {\r\n\r\n    let [data, setData] = useState<string | undefined>();\r\n\r\n    const fetchImg = async () => {\r\n        const buffer = await (await \r\n            apiFetch(`/file${path}`, \"GET\")\r\n        ).arrayBuffer()\r\n        \r\n        setData(bufferToBase64(buffer));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchImg();\r\n    }, [path]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                data ?\r\n                    <Grid\r\n                        container\r\n                        spacing={0}\r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"center\"\r\n                    >\r\n                        <Paper>\r\n                            <Box sx={{ margin: \"20px\"}}>\r\n                                <img style={{ maxWidth: \"100%\", maxHeight: \"500px\" }} src={\"data: image/png;base64,\"+data} alt=\"photo\" />\r\n                            </Box>\r\n                        </Paper>\r\n                </Grid>\r\n                :\r\n                    <Loading />\r\n            }   \r\n        </>\r\n    )\r\n}","import Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport { bufferToBase64 } from '../features/Fetch';\r\nimport Loading from './Loading';\r\nimport { useState, useEffect } from 'react';\r\nimport { apiFetch } from '../features/Fetch';\r\n\r\ninterface TextProps {\r\n    path: string\r\n}\r\n\r\nexport default ({ path }: TextProps) => {\r\n\r\n    let [data, setData] = useState<string | undefined>();\r\n\r\n    const fetchAudio = async () => {\r\n        const buffer = await (await \r\n            apiFetch(`/file${path}`, \"GET\")\r\n        ).arrayBuffer()\r\n        \r\n        setData(bufferToBase64(buffer));\r\n    }\r\n\r\n    useEffect(() => {\r\n        fetchAudio();\r\n    }, [path]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                data ?\r\n                    <Grid\r\n                        container\r\n                        spacing={0}\r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"center\"\r\n                    >\r\n                        <Paper>\r\n                            <Box sx={{ margin: \"20px\"}}>\r\n                                <audio controls={true} autoPlay >\r\n                                    <source src={`data:audio/wav;base64,${data}`} />\r\n                                </audio>\r\n                            </Box>\r\n                        </Paper>\r\n                </Grid>\r\n                :\r\n                    <Loading />\r\n            }   \r\n        </>\r\n    )\r\n}","import Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Paper from '@mui/material/Paper';\r\n\r\nimport { useEffect } from 'react';\r\nimport { apiFetch } from '../features/Fetch';\r\n\r\ninterface TextProps {\r\n    path: string\r\n}\r\n\r\nexport default ({ path }: TextProps ) => {\r\n\r\n    const play = () => {\r\n\r\n        let video = document.querySelector('#video') as any;\r\n\r\n        apiFetch(`/file${path}`, \"GET\")\r\n            .then(response => response.blob())\r\n            .then(blob => { video.src = URL.createObjectURL(blob) });\r\n    }\r\n    \r\n    useEffect(() => {\r\n        play();\r\n    }, [path]);\r\n\r\n    return (\r\n        <Grid\r\n            container\r\n            spacing={0}\r\n            direction=\"column\"\r\n            alignItems=\"center\"\r\n            justifyContent=\"center\"\r\n        >\r\n            <Paper>\r\n                <script>\r\n                    import MP4Source from \"../codecs/mp4Codec\";\r\n                </script>\r\n                <Box sx={{ margin: \"20px\"}}>\r\n                    <video style={{ maxWidth: \"100%\", maxHeight: \"500px\" }} id=\"video\" controls preload=\"auto\"></video>\r\n                </Box>\r\n            </Paper>\r\n        </Grid>\r\n    )\r\n}","import Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\nimport Button from '@mui/material/Button';\r\nimport Typography from '@mui/material/Typography';\r\n\r\nimport { useState, useEffect } from 'react';\r\nimport { apiFetch, apiFetchDownload } from '../features/Fetch';\r\n\r\ninterface TextProps {\r\n    path: String\r\n}\r\n\r\nexport default ({ path }: TextProps) => {\r\n\r\n    const [exist, setExist] = useState(false);\r\n\r\n    const download = async () => {\r\n        let newPath = path.split(\"/\");\r\n        let file = newPath.pop() || \"\";\r\n        apiFetchDownload(`/file${path}`, \"GET\", file);\r\n    }\r\n\r\n    const existing = async () => {\r\n\r\n        if(!path.includes(\".\")) return;\r\n\r\n        const res = await apiFetch(`/file${path}`, \"GET\");\r\n\r\n        if (res.status < 300) {\r\n            setExist(true);\r\n        }\r\n    }\r\n\r\n    useEffect(() => {\r\n        existing();\r\n    }, [path]);\r\n\r\n    return (\r\n        <>\r\n            {\r\n                exist ?\r\n                    <Grid\r\n                        container\r\n                        spacing={0}\r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"center\"\r\n                        style={{ minHeight: '70vh' }}\r\n                    >\r\n                        <Box sx={{display: \"flex\", flexDirection: \"column\", textAlign: \"center\" }}>\r\n                            <Typography variant=\"h6\" component=\"div\" style={{marginBottom: \"5vh\"}} >\r\n                                Cant show file\r\n                            </Typography>\r\n                            <Button sx={{ margin: \"5px\" }} onClick={download} variant=\"contained\">Download</Button>\r\n                        </Box>\r\n                    </Grid>\r\n                :\r\n                    <Grid\r\n                        container\r\n                        spacing={0}\r\n                        direction=\"column\"\r\n                        alignItems=\"center\"\r\n                        justifyContent=\"center\"\r\n                        style={{ minHeight: '70vh' }}\r\n                    >\r\n                        <Grid item xs={3}>\r\n                            <Typography variant=\"h6\" align=\"center\" component=\"div\" style={{marginBottom: \"2vh\"}} >\r\n                                Error 404\r\n                            </Typography>\r\n                            <Typography variant=\"overline\" component=\"div\" >\r\n                                cant find file\r\n                            </Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                \r\n            }   \r\n        </>\r\n    )\r\n}","import Text from './Text';\r\nimport Image from './Image';\r\nimport Audio from './Audio';\r\nimport Video from './Video';\r\nimport UnknownFile from './UnknownFile';\r\nimport { fileURL } from '../features/Router';\r\nimport { useRecoilValue } from 'recoil';\r\nimport { folderPath as folderPathState } from '../features/Atoms';\r\n\r\nconst videosTypes: string[] = [\".mp4\", \".webm\", \".ogg\"];\r\nconst imageTypes: string[] = [\".jpg\", \".png\", \".jpeg\", \".gif\", \".apng\", \".bmp\", \".PNG\", \".JPG\", \".JPEG\"];\r\nconst audioTypes: string[] = [\".mp3\", \".wav\", \".ogg\"];\r\nconst textTypes: string[] = [\".txt\", \".js\", \".php\", \".ts\", \".rs\", \".go\", \".tsx\", \".jsx\", \".r\"]\r\n    .concat(\".c .cc .c++ .cs .java .ex .lisp .clj .asm .rb .hs .py .ada .awk .bf .hpp .hh .css .html .coffee .dart .pws .sh .erl .fs .hy .kt .julia .jolie .tex .ls .ml .perl .prolog .sass .less .scheme .swift .svelte .vue .vba .yml .json .toml .xml\".split(\" \"));\r\n\r\nexport default () => {\r\n\r\n    const path = useRecoilValue(folderPathState) || fileURL();\r\n\r\n    const fileType = (arr: string[]) => {\r\n        return arr.some(typ => path.endsWith(typ));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            {\r\n                fileType(textTypes) ?\r\n                    <Text path={path} />\r\n                : fileType(audioTypes) ?\r\n                    <Audio path={path} />\r\n                : fileType(videosTypes) ?\r\n                    <Video path={path} />\r\n                : fileType(imageTypes) ?\r\n                    <Image path={path} />\r\n                :\r\n                <UnknownFile path={path} />\r\n            }\r\n        </>\r\n    )\r\n}","import * as React from 'react';\r\nimport Box from '@mui/material/Box';\r\nimport InputLabel from '@mui/material/InputLabel';\r\nimport MenuItem from '@mui/material/MenuItem';\r\nimport FormControl from '@mui/material/FormControl';\r\nimport Select, { SelectChangeEvent } from '@mui/material/Select';\r\n\r\ninterface StatusSelectorProps {\r\n    status: number,\r\n    setStatus: React.Dispatch<React.SetStateAction<number>>\r\n}\r\n\r\nexport default ({status, setStatus}: StatusSelectorProps) => {\r\n\r\n    const handleChange = (event: SelectChangeEvent) => {\r\n        setStatus(parseInt(event.target.value));\r\n    };\r\n\r\n    return (\r\n        <Box sx={{ minWidth: 120 }}>\r\n        <FormControl variant=\"standard\" fullWidth>\r\n                <InputLabel id=\"demo-simple-select-label\">Status</InputLabel>\r\n                <Select\r\n                    required \r\n                    labelId=\"demo-simple-select-label\"\r\n                    id=\"demo-simple-select\"\r\n                    value={status.toString()}\r\n                    label=\"Status*\"\r\n                    onChange={handleChange}\r\n                    defaultValue=\"OP\"\r\n                >\r\n                    <MenuItem value={2}>OP</MenuItem>\r\n                    <MenuItem value={3}>Can upload</MenuItem>\r\n                    <MenuItem value={4}>Can download</MenuItem>\r\n                </Select>\r\n        </FormControl>\r\n        </Box>\r\n    );\r\n}","import Card from '@mui/material/Card';\r\nimport CardActions from '@mui/material/CardActions';\r\nimport CardContent from '@mui/material/CardContent';\r\nimport Button from '@mui/material/Button';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport Typography from '@mui/material/Typography';\r\nimport Box from '@mui/material/Box';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\nimport Modal from './Modal';\r\nimport { useState } from 'react';\r\nimport { apiFetch } from '../features/Fetch';\r\nimport { useSnackbar } from 'notistack';\r\nimport StatusSelector from './StatusSelector';\r\n\r\nexport interface User {\r\n    id: number;\r\n    name: string;\r\n    email: string;\r\n    pass: string;\r\n    size: number;\r\n    path: string;\r\n    status: number;\r\n}\r\n\r\n\r\ninterface UserCardProps {\r\n    user: User, \r\n    key: number,\r\n    editable: boolean,\r\n    getUsers: () => Promise<void>\r\n}\r\n\r\n\r\nexport default ({user, key, editable, getUsers}: UserCardProps) => {\r\n\r\n    const [name, setName] = useState(user.name);\r\n    const [email, setEmail] = useState(user.email);\r\n    const [pass, setPass] = useState(user.pass);\r\n    const [size, setSize] = useState(user.size);\r\n    const [path, setPath] = useState(user.path);\r\n    const [status, setStatus] = useState(user.status);\r\n\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const addUser = async () => {\r\n        const res = await apiFetch(\"/users/\"+user.id, \"PATCH\", \r\n            {\r\n                id: user.id,\r\n                name: name,\r\n                email: email,\r\n                pass: pass,\r\n                size: size,\r\n                path: path,\r\n                status: status\r\n            }\r\n        );\r\n\r\n        if (res.status < 300) {\r\n            enqueueSnackbar(await res.text(), { variant: \"success\" });\r\n            getUsers();\r\n        }else{\r\n            enqueueSnackbar(await res.text(), { variant: \"error\" });\r\n        }\r\n    }\r\n\r\n    const deleteUser = async () => {\r\n        const res = await apiFetch(\"/users/\"+user.id, \"DELETE\");\r\n\r\n        if (res.status < 300) {\r\n            enqueueSnackbar(await res.text(), { variant: \"success\" });\r\n            getUsers();\r\n        }else{\r\n            enqueueSnackbar(await res.text(), { variant: \"error\" });\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Card key={key} sx={{ minWidth: \"220px\", flex: \"1\", margin: \"20px\" }}>\r\n            <CardContent>\r\n                <Typography gutterBottom variant=\"h5\" component=\"div\">\r\n                    {user.name}\r\n                </Typography>\r\n                <Box\r\n                    component=\"form\"\r\n                    sx={{\r\n                        '& .MuiTextField-root': { m: 1, width: '25ch' },\r\n                    }}\r\n                    noValidate\r\n                    autoComplete=\"off\"\r\n                >\r\n                    <Typography variant=\"body2\" color=\"text.secondary\">\r\n                        <Grid container spacing={2}>\r\n                            <Grid  item xs={6}>\r\n                                <ul>\r\n                                    <li key=\"id\">\r\n                                        ID: {user.id}\r\n                                    </li>\r\n                                </ul>\r\n                                <ul>\r\n                                    <li key=\"email\">\r\n                                        Email: {user.email}\r\n                                    </li>\r\n                                </ul>\r\n                                <ul>\r\n                                    <li key=\"pass\">\r\n                                        Pass: ********\r\n                                    </li>\r\n                                </ul>\r\n                            </Grid>\r\n                            <Grid item xs={6}>\r\n                                <ul>\r\n                                    <li key=\"size\">\r\n                                        Size: {user.size}\r\n                                    </li>\r\n                                </ul>\r\n                                <ul>\r\n                                    <li key=\"path\">\r\n                                        Path: {user.path}\r\n                                    </li>\r\n                                </ul>\r\n                                <ul>\r\n                                    <li key=\"status\">\r\n                                        Status: \r\n                                        {user.status === 1 ?\r\n                                            \" Admin\"\r\n                                        :user.status === 2 ?\r\n                                            \" OP\"\r\n                                        :user.status === 3 ?\r\n                                            \" Can upload\"\r\n                                        : \r\n                                            \" Can download\"\r\n                                        }\r\n                                    </li>\r\n                                </ul>\r\n                            </Grid>\r\n                        </ Grid>\r\n                    </Typography>\r\n                </Box>\r\n            </CardContent>\r\n            <CardActions>\r\n                <Modal editable={editable} buttonText='Edit'>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={6}>\r\n                            <TextField \r\n                                required \r\n                                defaultValue={name} \r\n                                id=\"name\" \r\n                                label=\"Name\" \r\n                                variant=\"standard\" \r\n                                onChange={e => setName(e.target.value)} \r\n                            />\r\n                            <TextField \r\n                                required \r\n                                defaultValue={email} \r\n                                id=\"email\" \r\n                                label=\"Email\" \r\n                                variant=\"standard\" \r\n                                onChange={e => setEmail(e.target.value)} \r\n                            />\r\n                            <TextField \r\n                                defaultValue={pass} \r\n                                id=\"pass\" \r\n                                label=\"Password\" \r\n                                variant=\"standard\" \r\n                                onChange={e => setPass(e.target.value)} \r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={6}>\r\n                            <TextField \r\n                                required \r\n                                defaultValue={path} \r\n                                id=\"path\" \r\n                                label=\"Path to root existing folder\" \r\n                                variant=\"standard\" \r\n                                onChange={e => setPath(e.target.value)} \r\n                            />\r\n                            <StatusSelector status={status} setStatus={setStatus} />\r\n                            <TextField \r\n                                required \r\n                                defaultValue={size} \r\n                                id=\"size\" \r\n                                label=\"Size\" \r\n                                variant=\"standard\" \r\n                                type=\"number\"\r\n                                InputLabelProps={{\r\n                                    shrink: true,\r\n                                }}\r\n                                InputProps={{\r\n                                    endAdornment: <InputAdornment position=\"end\">Mb</InputAdornment>\r\n                                }}\r\n                                onChange={e => parseInt(e.target.value) ? setSize(parseInt(e.target.value)) : \"\"} \r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    <Button sx={{float: \"right\", marginTop: \"20px\"}} onClick={addUser}>Submit</Button>\r\n                </Modal>\r\n                <Button onClick={deleteUser} disabled={editable} size=\"small\">Delete</Button>\r\n            </CardActions>\r\n        </Card>\r\n\r\n    );\r\n}","import Button from '@mui/material/Button';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport TextField from '@mui/material/TextField';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport Modal from './Modal';\r\nimport { useState } from 'react';\r\nimport { apiFetch } from '../features/Fetch';\r\nimport { User } from './UserCard';\r\nimport { useSnackbar } from 'notistack';\r\nimport StatusSelector from './StatusSelector';\r\n\r\ninterface AddUserProps {\r\n    setUsers: React.Dispatch<React.SetStateAction<User[]>>\r\n}\r\n\r\n\r\nexport default ({setUsers}: AddUserProps) => {\r\n\r\n    const [name, setName] = useState(\"\");\r\n    const [email, setEmail] = useState(\"\");\r\n    const [pass, setPass] = useState(\"\");\r\n    const [size, setSize] = useState(0);\r\n    const [path, setPath] = useState(\"/\");\r\n    const [status, setStatus] = useState<number>(2);\r\n\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    const editUser = async () => {\r\n        \r\n        const res = await apiFetch(\"/users\", \"POST\", \r\n            {\r\n                id: 0,\r\n                name: name,\r\n                email: email,\r\n                pass: pass,\r\n                size: size,\r\n                path: path,\r\n                status: status\r\n            } as User\r\n        )\r\n\r\n        if (res.status < 300) {\r\n            enqueueSnackbar(await res.text(), { variant: \"success\" });\r\n            getUsers();\r\n        }else{\r\n            enqueueSnackbar(await res.text(), { variant: \"error\" });\r\n        }\r\n    }\r\n\r\n    const getUsers = async () => {\r\n        const res = await apiFetch(\"/users\", \"GET\");\r\n\r\n        if(res.status >= 300){\r\n            enqueueSnackbar(await res.text(), { variant: \"error\" });\r\n            return;\r\n        }\r\n        setUsers(await res.json())\r\n    }\r\n\r\n    return (\r\n        \r\n        <Modal buttonText='add User'>\r\n            <Grid container spacing={2}>\r\n                <Grid item xs={6}>\r\n                    <TextField \r\n                        required \r\n                        defaultValue={name} \r\n                        id=\"name\" \r\n                        label=\"Name\" \r\n                        variant=\"standard\" \r\n                        onChange={e => setName(e.target.value)} \r\n                    />\r\n                    <TextField \r\n                        required \r\n                        defaultValue={email} \r\n                        id=\"email\" \r\n                        label=\"Email\" \r\n                        variant=\"standard\" \r\n                        onChange={e => setEmail(e.target.value)} \r\n                    />\r\n                    <TextField \r\n                        required \r\n                        defaultValue={pass} \r\n                        id=\"pass\" \r\n                        label=\"Password\" \r\n                        variant=\"standard\" \r\n                        onChange={e => setPass(e.target.value)} \r\n                    />\r\n                </Grid>\r\n                <Grid item xs={6}>\r\n                    <TextField \r\n                        required \r\n                        defaultValue={path} \r\n                        id=\"path\" \r\n                        label=\"Path to root existing folder\" \r\n                        variant=\"standard\" \r\n                        onChange={e => setPath(e.target.value)} \r\n                    />\r\n                    <StatusSelector status={status} setStatus={setStatus} />\r\n                    <TextField \r\n                        required \r\n                        defaultValue={size} \r\n                        id=\"size\" \r\n                        label=\"Size\" \r\n                        variant=\"standard\" \r\n                        type=\"number\"\r\n                        InputLabelProps={{\r\n                            shrink: true,\r\n                        }}\r\n                        InputProps={{\r\n                            endAdornment: <InputAdornment position=\"end\">Mb</InputAdornment>\r\n                        }}\r\n                        onChange={e => parseInt(e.target.value) ? setSize(parseInt(e.target.value)) : \"\"} \r\n                    />\r\n                </Grid>\r\n            </Grid>\r\n            <Button sx={{float: \"right\", marginTop: \"20px\"}} onClick={editUser}>Submit</Button>\r\n        </Modal>\r\n\r\n    );\r\n}","import Box from '@mui/material/Box';\r\nimport Grid from '@mui/material/Grid';\r\n\r\nimport { useRecoilValue } from 'recoil';\r\nimport { user as userState } from '../features/Atoms';\r\nimport { useEffect, useState } from 'react';\r\nimport { useSnackbar } from 'notistack';\r\n\r\nimport UserCard from './UserCard';\r\nimport { User } from './UserCard';\r\nimport AddUser from './AddUser';\r\nimport { apiFetch } from '../features/Fetch';\r\n\r\nexport default () => {\r\n\r\n    const [users, setUsers] = useState([] as User[]);\r\n    const me = useRecoilValue(userState);\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        getUsers();\r\n    }, []);\r\n\r\n    const getUsers = async () => {\r\n        const res = await apiFetch(\"/users\", \"GET\");\r\n\r\n        if(res.status >= 300){\r\n            enqueueSnackbar(await res.text(), { variant: \"error\" });\r\n            return;\r\n        }\r\n        setUsers(await res.json())\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Box sx={{ flexGrow: 1 }}>\r\n                <Grid container sx={{ flexWrap: \"wrap\", display: \"flex\" }}>\r\n                    {users.map((user, index) => (\r\n                        <UserCard \r\n                            user={user} \r\n                            key={index} \r\n                            editable={user.status === 1 || user.id === me.id}\r\n                            getUsers={getUsers}\r\n                        />\r\n                    ))}\r\n                </Grid>\r\n            </Box>\r\n            <AddUser setUsers={setUsers}/>\r\n        </>\r\n    );\r\n}","import { Route } from '../features/Router';\r\nimport Folder from '../components/Folder';\r\nimport Edit from '../components/Edit';\r\nimport File from '../components/File';\r\nimport UserStettings from '../components/UserStettings';\r\nimport { fileURL } from '../features/Router';\r\n\r\n\r\nconst routes: Array<Route> = [\r\n    {\r\n        name: \"/showfolder\",\r\n        component: <Folder />\r\n    },\r\n    {\r\n        name: \"/showfile\",\r\n        component: <File />\r\n    },\r\n    {\r\n        name: \"/users\",\r\n        component: <UserStettings />\r\n    },\r\n    {\r\n        name: \"/edit\",\r\n        component: <Edit />\r\n    }\r\n];\r\n\r\nexport default routes;","import Box from '@mui/material/Box';\r\nimport routes from '../routes/bodyRoutes';\r\nimport Router from '../features/Router';\r\n\r\nexport default () => {\r\n    return (\r\n        <Box component=\"main\" sx={{ flexGrow: 1, p: 3, paddingTop: '80px' }}>\r\n            <Router routes={routes} />\r\n        </Box>\r\n    );\r\n}","import AppBar from \"./AppBar\";\r\nimport Box from '@mui/material/Box';\r\nimport Drawer from \"./Drawer\";\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport Body from \"./Body\";\r\n\r\nexport default () => {\r\n\r\n    return (\r\n        <Box sx={{ display: 'flex' }}>\r\n            <CssBaseline />\r\n            <AppBar />\r\n\r\n            <Drawer />\r\n            \r\n            <Body />\r\n            \r\n        </Box>\r\n    );\r\n}","import { Route } from '../features/Router';\r\nimport Main from '../components/Main';\r\nimport Login from '../components/Login';\r\n\r\n\r\nconst routes: Array<Route> = [\r\n    {\r\n        name: \"/\",\r\n        component: <Login />\r\n    },\r\n    {\r\n        name: \"/showfolder\",\r\n        component: <Main />\r\n    },\r\n    {\r\n        name: \"/showfile\",\r\n        component: <Main />\r\n    },\r\n    {\r\n        name: \"/users\",\r\n        component: <Main />\r\n    },\r\n    {\r\n        name: \"/folder\",\r\n        component: <Main />\r\n    },\r\n    {\r\n        name: \"/login\",\r\n        component: <Login />\r\n    },\r\n    {\r\n        name: \"/edit\",\r\n        component: <Main />\r\n    }\r\n];\r\n\r\nexport default routes;","import { ThemeProvider, createTheme } from '@mui/material/styles';\r\nimport Router from '../features/Router';\r\nimport routes from '../routes/mainRoutes';\r\nimport CssBaseline from '@mui/material/CssBaseline';\r\nimport { RecoilRoot } from 'recoil';\r\nimport { SnackbarProvider } from 'notistack';\r\n\r\nconst theme = createTheme({\r\n    palette: {\r\n        primary: {\r\n            main: '#E06D06', \r\n        },\r\n        secondary: {\r\n            main: '#161032',\r\n        }\r\n    }\r\n});\r\n\r\n\r\nfunction App() {\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <CssBaseline/>\r\n            <RecoilRoot>\r\n                <ThemeProvider theme={theme}>\r\n                    <SnackbarProvider maxSnack={4}>\r\n                        <Router routes={routes} />\r\n                    </SnackbarProvider>\r\n                </ThemeProvider>\r\n            </RecoilRoot>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App';\r\n\r\nReactDOM.render(\r\n    <React.StrictMode>\r\n        <App />\r\n    </React.StrictMode>,\r\n    document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals"],"sourceRoot":""}